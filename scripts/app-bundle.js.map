{"version":3,"sources":["../src/app.ts","../src/app.html","../src/enums/leave-trigger.ts","../src/environment.ts","../src/helpers.ts","../src/main.ts","../src/models/banter-model.ts","../src/models/cpu-model.ts","../src/models/player-model.ts","../src/models/settings-model.ts","../src/pages/game.ts","../src/pages/game.css","../src/pages/game.html","../src/pages/home.ts","../src/pages/home.html","../src/pages/message-test.ts","../src/pages/message-test.html","../src/resources/index.ts","../src/resources/phaser-game/phaser-game.ts","../src/resources/value-converters/flag-value-converter.ts","../src/resources/value-converters/integer-array-value-converter.ts","../src/resources/value-converters/integer-value-converter.ts","../src/resources/value-converters/json-value-converter.ts","../src/scenes/cyberball.ts"],"names":[],"mappings":"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","file":"app-bundle.js","sourcesContent":["import { RouterConfiguration, Router } from 'aurelia-router';\n\nexport class App {\n    router: Router;\n\n    configureRouter(config: RouterConfiguration, router: Router): void {\n        this.router = router;\n\n        config.title = 'Cyberball';\n\n        config.map([\n            { route: ['', 'home'], name: 'home', moduleId: 'pages/home' },\n            { route: 'game', name: 'game', moduleId: 'pages/game' },\n            { route: 'message-test', name: 'message-test', moduleId: 'pages/message-test' }\n        ]);\n    }\n}\n","<template>\n    <router-view></router-view>\n</template>\n","export enum LeaveTrigger {\r\n    None = 0,\r\n    Turn = 1,\r\n    Time = 1 << 1,\r\n    Ignored = 1 << 2,\r\n    OtherLeaver = 1 << 3,\r\n    TimeIgnored = 1 << 4\r\n}\r\n","export default {\n  debug: true,\n  testing: true\n};\n","export function getCaughtBallPosition(player: Phaser.GameObjects.Sprite) {\n    return { x: player.x + (player.flipX ? -50 : 50), y: player.y - 15 };\n}\n\nexport function getActiveBallPosition(player: Phaser.GameObjects.Sprite) {\n    return { x: player.x + (player.flipX ? 40 : -40), y: player.y - 20 };\n}\n","import {Aurelia} from 'aurelia-framework'\nimport environment from './environment';\n\nexport function configure(aurelia: Aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  aurelia.use.developmentLogging(environment.debug ? 'debug' : 'warn');\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","export class BanterModel {\n    chance: number;\n    delay: number;\n    delayVariance: number;\n    messages: Array<string>;\n}\n","import { BanterModel } from './banter-model';\r\nimport { PlayerModel } from './player-model';\r\n\r\nexport class CPUModel extends PlayerModel {\r\n    // A set of weights for each possible target, adding up to 100%.\r\n    targetPreference: Array<number> = [50, 50];\r\n\r\n    throwDelay: number = 500;\r\n    throwDelayVariance: number = 200;\r\n\r\n    catchDelay: number = 500;\r\n    catchDelayVariance: number = 200;\r\n\r\n    introductionBanter?: BanterModel;\r\n    throwBanter?: BanterModel\r\n    catchBanter?: BanterModel\r\n    leftOutBanter?: BanterModel\r\n\r\n    boredomBanterThreshold?: number;\r\n    boredomBanter?: BanterModel;\r\n\r\n    leaveTurnChance?: number = 100;\r\n    leaveTimeChance?: number = 100;\r\n    leaveIgnoredChance?: number = 100;\r\n    leaveTimeIgnoredChance?: number = 100;\r\n    leaveOtherLeaverChance?: number = 50;\r\n\r\n    constructor(init?: Partial<CPUModel>) {\r\n        super();\r\n\r\n        if(init)\r\n            Object.assign(this, init);\r\n    }\r\n}\r\n","import { LeaveTrigger } from \"enums/leave-trigger\";\r\n\r\nexport class PlayerModel {\r\n    name: string;\r\n    tint?: string;\r\n\r\n    portrait?: string;\r\n\r\n    /** Actions that may trigger a leave by this player. */\r\n    leaveTrigger?: LeaveTrigger = LeaveTrigger.None;\r\n\r\n    /** This player may leave after this many turns. */\r\n    leaveTurn?: number = 10;\r\n    leaveTurnVariance?: number = 2;\r\n\r\n    /** This player may leave after this much time. (Seconds) */\r\n    leaveTime?: number = 120;\r\n    leaveTimeVariance?: number = 30;\r\n\r\n    /** This player may leave after not catching the ball for this many turns. */\r\n    leaveIgnored?: number = 10;\r\n    leaveIgnoredVariance?: number = 2;\r\n\r\n    /** This player may leave after not catching the ball for this much time. (Seconds) */\r\n    leaveTimeIgnored?: number = 45;\r\n    leaveTimeIgnoredVariance?: number = 15;\r\n\r\n    /** This player may leave after this many other players leave. */\r\n    leaveOtherLeaver?: number = 2;\r\n\r\n    constructor(init?: Partial<PlayerModel>) {\r\n        if(init)\r\n            Object.assign(this, init);\r\n    }\r\n}\r\n","import { PlayerModel } from './player-model';\nimport { CPUModel } from './cpu-model';\n\nexport class SettingsModel {\n    player: PlayerModel = new PlayerModel();\n    computerPlayers: Array<CPUModel>;\n\n    // Gameplay\n    throwCount: number = 10;\n    ballSpeed: number = 500;\n\n    useSchedule: boolean = false;\n    scheduleHonorsThrowCount: boolean = false;\n    schedule: Array<number> = [\n        1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0\n    ];\n\n    // Graphics\n    baseUrl: string = './assets';\n\n    ballSprite: string = 'ball.png';\n    ballTint?: string;\n\n    portraitHeight: number = 75;\n    portraitPadding: number = 10;\n\n    get hasPortraits(): boolean | string {\n        return this.player.portrait || this.computerPlayers.some(cpu => cpu.portrait);\n    }\n\n    // Misc\n    chatEnabled: boolean = false;\n\n    gameOverText: string = \"Game Over\";\n    gameOverOpacity: number = 0.5;\n\n    constructor(init?: Partial<SettingsModel>) {\n        Object.assign(this, init);\n    }\n}\n\nexport const defaultSettings = new SettingsModel({\n    player: new PlayerModel({\n       name: 'Player 1'\n    }),\n    computerPlayers: [\n        new CPUModel({\n            name: 'Player 2'\n        }),\n        new CPUModel({\n            name: 'Player 3'\n        })\n    ]\n});\n","import { CyberballScene } from './../scenes/cyberball';\nimport { defaultSettings, SettingsModel } from './../models/settings-model';\nimport Phaser from 'phaser';\nimport { PhaserGameCustomElement } from 'resources/phaser-game/phaser-game';\n\n//     // TODO: Use events to talk to Qualtrics?\n//     //setTimeout(() => { window.dispatchEvent(new CustomEvent('complete', { detail: { test: 'test' } }))}, 1000)\n\n\nexport class GameViewModel {\n    settings: SettingsModel = defaultSettings;\n\n    // Game:\n\n    game: PhaserGameCustomElement;\n\n    gameWidth = 800;\n    gameHeight = 460;\n\n    gameConfig: Phaser.Types.Core.GameConfig;\n\n    activate(params) {\n        if('settings' in params) {\n            this.settings = new SettingsModel(JSON.parse(atob(params.settings)));\n        }\n\n        if('playerName' in params) {\n            this.settings.player.name = params.playerName;\n        }\n\n        if(this.settings.hasPortraits) {\n            this.gameHeight += this.settings.portraitHeight * 2 + this.settings.portraitPadding * 4;\n        }\n    }\n\n    bind() {\n        this.gameConfig  = {\n            type: Phaser.AUTO,\n            width: this.gameWidth,\n            height: this.gameHeight,\n            scene: new CyberballScene(this.settings),\n            physics: {\n                default: 'arcade'\n            }\n        };\n    }\n\n    // Chat:\n\n    chatMessage: string;\n    chatMessages: Array<{sender: string, text: string}> = [];\n\n    sendMessage() {\n        this.chatMessages.push({\n            sender: this.settings.player.name,\n            text: this.chatMessage\n        });\n\n        this.chatMessage = '';\n    }\n}\n","canvas {\n    max-width: 100%;\n}\n\n.chat-log {\n    border: 1px solid black;\n    border-bottom: 0;\n    height: 100px;\n    overflow-y: auto;\n}\n\n.chat-input {\n    display: flex;\n}\n\n.chat-input input {\n    flex: 1;\n}\n","<template>\n    <require from=\"./game.css\"></require>\n\n    <phaser-game config.bind=\"gameConfig\"></phaser-game>\n\n    <div if.bind=\"settings.chatEnabled\" class=\"chat\" css=\"width: ${gameWidth}px\">\n        <div class=\"chat-log\">\n            <div repeat.for=\"message of chatMessages\">\n                <strong>${message.sender}</strong>: <span>${message.text}</span>\n            </div>\n        </div>\n\n        <form class=\"chat-input\" submit.delegate=\"sendMessage()\">\n            <input value.bind=\"chatMessage\" />\n            <button type=\"submit\">Send</button>\n        </form>\n    </div>\n</template>\n","import {BindingSignaler} from 'aurelia-templating-resources';\nimport {autoinject} from 'aurelia-framework';\nimport { SettingsModel, defaultSettings } from \"models/settings-model\";\nimport { CPUModel } from 'models/cpu-model';\nimport ClipboardJS from 'clipboard';\n\n@autoinject()\nexport class HomeViewModel {\n    settings: SettingsModel = defaultSettings;\n    clipboard: ClipboardJS;\n\n    constructor(private signaler: BindingSignaler) {}\n\n    bind() {\n        this.clipboard = new ClipboardJS('#copy');\n    }\n\n    unbind() {\n        this.clipboard.destroy();\n    }\n\n    addCPU() {\n        this.settings.computerPlayers.push(new CPUModel({\n            name: `Player ${this.settings.computerPlayers.length + 2}`\n        }));\n\n        this.settings.computerPlayers.forEach(cpu => {\n            while(cpu.targetPreference.length != this.settings.computerPlayers.length)\n                cpu.targetPreference.push(0);\n        });\n    }\n\n    removeCPU() {\n        this.settings.computerPlayers.pop();\n\n        this.settings.computerPlayers.forEach(cpu => {\n            cpu.targetPreference.pop();\n        });\n    }\n\n    saveSettings() {\n        this.signaler.signal('save-settings');\n    }\n\n    get url() {\n        let url = document.location.origin + document.location.pathname;\n\n        url += '#game?settings=';\n        url += btoa(JSON.stringify(this.settings));\n\n        return url;\n    }\n\n    testGame() {\n        window.open(this.url);\n    }\n}\n","<template>\n    <require from=\"resources/value-converters/json-value-converter\"></require>\n    <require from=\"resources/value-converters/integer-value-converter\"></require>\n    <require from=\"resources/value-converters/integer-array-value-converter\"></require>\n    <require from=\"resources/value-converters/flag-value-converter\"></require>\n\n    <style>\n        body {\n            background: #111;\n            color: #eee;\n            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n        }\n\n        .input {\n            display: flex;\n            margin-bottom: 5px;\n        }\n\n        .input label {\n            width: 180px;\n        }\n\n        .input label + * {\n            box-sizing: border-box;\n            max-width: 300px;\n        }\n\n        .input input[type=text], .input input[type=number], textarea {\n            flex: 1 1 100%;\n            min-width: 0;\n            width: auto;\n        }\n\n        .column {\n            display: flex;\n            flex-direction: column;\n        }\n\n        .input > div {\n            display: flex;\n        }\n\n        pre {\n            max-width: 100%;\n            overflow-x: auto;\n        }\n    </style>\n\n    <div style=\"display: flex;\">\n        <div style=\"margin-right: 20px;\">\n            <h1>Cyberball Configuration Builder</h1>\n\n            <h2>Player</h2>\n\n            <div class=\"input\">\n                <label>Name</label>\n                <input type=\"text\" value.bind=\"settings.player.name\" />\n            </div>\n\n            <div class=\"input\">\n                <label>Tint Color</label>\n                <input type=\"color\" value.bind=\"settings.player.tint\" />\n            </div>\n\n            <div class=\"input\">\n                <label>Portrait</label>\n                <input type=\"text\" value.bind=\"settings.player.portrait\" />\n            </div>\n\n            <div>Leave Triggers</div>\n            <div class=\"column\">\n                <label>\n                    <input type=\"checkbox\" checked.bind=\"settings.player.leaveTrigger | flag:settings.player.leaveTrigger:1\" /> Throws Elapsed\n                </label>\n                <label>\n                    <input type=\"checkbox\" checked.bind=\"settings.player.leaveTrigger | flag:settings.player.leaveTrigger:2\" /> Time Elapsed\n                </label>\n                <label>\n                    <input type=\"checkbox\" checked.bind=\"settings.player.leaveTrigger | flag:settings.player.leaveTrigger:4\" /> Throws Ignored\n                </label>\n                <label>\n                    <input type=\"checkbox\" checked.bind=\"settings.player.leaveTrigger | flag:settings.player.leaveTrigger:16\" /> Time Ignored\n                </label>\n                <label>\n                    <input type=\"checkbox\" checked.bind=\"settings.player.leaveTrigger | flag:settings.player.leaveTrigger:8\" /> Other Players Leaving\n                </label>\n            </div>\n\n            <div class=\"column\" if.bind=\"settings.player.leaveTrigger | flag:settings.player.leaveTrigger:1\">\n                <label>Throws Elapsed Leave Threshold/Variance</label>\n\n                <div>\n                    <input type=\"number\" value.bind=\"settings.player.leaveTurn | integer\" />\n                    <input type=\"number\" value.bind=\"settings.player.leaveTurnVariance | integer\" />\n                </div>\n            </div>\n\n            <div class=\"column\" if.bind=\"settings.player.leaveTrigger | flag:settings.player.leaveTrigger:2\">\n                <label>Time Elapsed Leave Threshold/Variance</label>\n\n                <div>\n                    <input type=\"number\" value.bind=\"settings.player.leaveTime | integer\" />\n                    <input type=\"number\" value.bind=\"settings.player.leaveTimeVariance | integer\" />\n                </div>\n            </div>\n\n            <div class=\"column\" if.bind=\"settings.player.leaveTrigger | flag:settings.player.leaveTrigger:4\">\n                <label>Ignored Throws Leave Threshold/Variance</label>\n\n                <div>\n                    <input type=\"number\" value.bind=\"settings.player.leaveIgnored | integer\" />\n                    <input type=\"number\" value.bind=\"settings.player.leaveIgnoredVariance | integer\" />\n                </div>\n            </div>\n\n            <div class=\"column\" if.bind=\"settings.player.leaveTrigger | flag:settings.player.leaveTrigger:16\">\n                <label>Ignored Time Leave Threshold/Variance</label>\n\n                <div>\n                    <input type=\"number\" value.bind=\"settings.player.leaveTimeIgnored | integer\" />\n                    <input type=\"number\" value.bind=\"settings.player.leaveTimeIgnoredVariance | integer\" />\n                </div>\n            </div>\n\n            <div class=\"column\" if.bind=\"settings.player.leaveTrigger | flag:settings.player.leaveTrigger:8\">\n                <label>Others Left Leave Threshold</label>\n\n                <div>\n                    <input type=\"number\" value.bind=\"settings.player.leaveOtherLeaver | integer\" />\n                </div>\n            </div>\n\n            <h2>\n                CPUs\n                <button click.delegate=\"addCPU()\">+ Add CPU</button>\n                <button click.delegate=\"removeCPU()\">- Remove CPU</button>\n            </h2>\n\n            <div repeat.for=\"cpu of settings.computerPlayers\">\n                <div class=\"input\">\n                    <label>Name</label>\n                    <input type=\"text\" value.bind=\"cpu.name\" />\n                </div>\n\n                <div class=\"input\">\n                    <label>Tint Color</label>\n                    <input type=\"color\" value.bind=\"cpu.tint\" />\n                </div>\n\n                <div class=\"input\">\n                    <label>Portrait</label>\n                    <input type=\"text\" value.bind=\"cpu.portrait\" />\n                </div>\n\n                <div class=\"input\">\n                    <label>Throw Delay</label>\n                    <input type=\"number\" value.bind=\"cpu.throwDelay | integer\" />\n                </div>\n\n                <div class=\"input\">\n                    <label>Throw Delay Variance</label>\n                    <input type=\"number\" value.bind=\"cpu.throwDelayVariance | integer\" />\n                </div>\n\n                <div class=\"input\">\n                    <label>Catch Delay</label>\n                    <input type=\"number\" value.bind=\"cpu.catchDelay | integer\" />\n                </div>\n\n                <div class=\"input\">\n                    <label>Catch Delay Variance</label>\n                    <input type=\"number\" value.bind=\"cpu.catchDelayVariance | integer\" />\n                </div>\n\n\n                <div class=\"input\">\n                    <label>Target Preference</label>\n\n                    <div>\n                        <input repeat.for=\"target of cpu.targetPreference\" type=\"number\" value.bind=\"cpu.targetPreference[$index] | integer\" />\n                    </div>\n                </div>\n\n                <div>Leave Triggers</div>\n                <div class=\"column\">\n                    <label>\n                        <input type=\"checkbox\" checked.bind=\"cpu.leaveTrigger | flag:cpu.leaveTrigger:1\" /> Throws Elapsed\n                    </label>\n                    <label>\n                        <input type=\"checkbox\" checked.bind=\"cpu.leaveTrigger | flag:cpu.leaveTrigger:2\" /> Time Elapsed\n                    </label>\n                    <label>\n                        <input type=\"checkbox\" checked.bind=\"cpu.leaveTrigger | flag:cpu.leaveTrigger:4\" /> Throws Ignored\n                    </label>\n                    <label>\n                        <input type=\"checkbox\" checked.bind=\"cpu.leaveTrigger | flag:cpu.leaveTrigger:16\" /> Time Ignored\n                    </label>\n                    <label>\n                        <input type=\"checkbox\" checked.bind=\"cpu.leaveTrigger | flag:cpu.leaveTrigger:8\" /> Other Players Leaving\n                    </label>\n                </div>\n\n                <div class=\"column\" if.bind=\"cpu.leaveTrigger | flag:cpu.leaveTrigger:1\">\n                    <label>Throws Elapsed Leave Threshold/Variance/Chance</label>\n\n                    <div>\n                        <input type=\"number\" value.bind=\"cpu.leaveTurn | integer\" />\n                        <input type=\"number\" value.bind=\"cpu.leaveTurnVariance | integer\" />\n                        <input type=\"number\" value.bind=\"cpu.leaveTurnChance | integer\" />\n                    </div>\n                </div>\n\n                <div class=\"column\" if.bind=\"cpu.leaveTrigger | flag:cpu.leaveTrigger:2\">\n                    <label>Time Elapsed Leave Threshold/Variance/Chance</label>\n\n                    <div>\n                        <input type=\"number\" value.bind=\"cpu.leaveTime | integer\" />\n                        <input type=\"number\" value.bind=\"cpu.leaveTimeVariance | integer\" />\n                        <input type=\"number\" value.bind=\"cpu.leaveTimeChance | integer\" />\n                    </div>\n                </div>\n\n                <div class=\"column\" if.bind=\"cpu.leaveTrigger | flag:cpu.leaveTrigger:4\">\n                    <label>Ignored Throws Leave Threshold/Variance/Chance</label>\n\n                    <div>\n                        <input type=\"number\" value.bind=\"cpu.leaveIgnored | integer\" />\n                        <input type=\"number\" value.bind=\"cpu.leaveIgnoredVariance | integer\" />\n                        <input type=\"number\" value.bind=\"cpu.leaveIgnoredChance | integer\" />\n                    </div>\n                </div>\n\n                <div class=\"column\" if.bind=\"cpu.leaveTrigger | flag:cpu.leaveTrigger:16\">\n                    <label>Ignored Time Leave Threshold/Variance/Chance</label>\n\n                    <div>\n                        <input type=\"number\" value.bind=\"cpu.leaveTimeIgnored | integer\" />\n                        <input type=\"number\" value.bind=\"cpu.leaveTimeIgnoredVariance | integer\" />\n                        <input type=\"number\" value.bind=\"cpu.leaveTimeIgnoredChance | integer\" />\n                    </div>\n                </div>\n\n                <div class=\"column\" if.bind=\"cpu.leaveTrigger | flag:cpu.leaveTrigger:8\">\n                    <label>Others Left Leave Threshold/Chance</label>\n\n                    <div>\n                        <input type=\"number\" value.bind=\"cpu.leaveOtherLeaver | integer\" />\n                        <input type=\"number\" value.bind=\"cpu.leaveOtherLeaverChance | integer\" />\n                    </div>\n                </div>\n\n                <hr />\n            </div>\n\n            <h2>Gameplay</h2>\n\n            <div class=\"input\">\n                <label>Throw Count</label>\n                <input type=\"number\" value.bind=\"settings.throwCount | integer\" />\n            </div>\n\n            <div class=\"input\">\n                <label>Ball Speed</label>\n                <input type=\"number\" value.bind=\"settings.ballSpeed | integer\" />\n            </div>\n\n            <div class=\"input\">\n                <label>Ball Tint Color</label>\n                <input type=\"color\" value.bind=\"settings.ballTint\" />\n            </div>\n\n            <div class=\"input\">\n                <label>Portrait Height</label>\n                <input type=\"number\" value.bind=\"settings.portraitHeight | integer\" />\n            </div>\n\n            <div class=\"input\">\n                <label>Use Schedule</label>\n                <input type=\"checkbox\" checked.bind=\"settings.useSchedule\" />\n            </div>\n\n            <div class=\"input\" if.bind=\"settings.useSchedule\">\n                <label>Schedule</label>\n                <textarea value.bind=\"settings.schedule | integerArray & updateTrigger:'blur'\"></textarea>\n            </div>\n\n            <div class=\"input\">\n                <label>Schedule Honors Throw Count</label>\n                <input type=\"checkbox\" checked.bind=\"settings.scheduleHonorsThrowCount\" />\n            </div>\n\n            <div class=\"input\">\n                <label>Game Over Text</label>\n                <input type=\"text\" value.bind=\"settings.gameOverText\" />\n            </div>\n\n            <div class=\"input\">\n                <label>Game Over Opacity (number between 0 and 1)</label>\n                <input type=\"number\" min=\"0\" max=\"1\" step=\"0.1\" value.bind=\"settings.gameOverOpacity\" />\n            </div>\n\n            <button click.delegate=\"saveSettings()\">Save</button>\n        </div>\n\n        <div style=\"overflow-y: auto;\">\n            <pre>${settings | json & signal: 'save-settings'}</pre>\n        </div>\n    </div>\n\n    <div>\n        <h1>\n            Code\n            <button id=\"copy\" data-clipboard-target=\"#code\">&#10697; Copy</button>\n            <button click.delegate=\"testGame()\">&#129514; Test</button>\n        </h1>\n        <pre id=\"code\">&lt;iframe id=\"cyberball\" width=\"100%\" height=\"580\" src=\"${url}\"&gt;&lt;/iframe&gt;</pre>\n    </div>\n</template>\n","import {BindingSignaler} from 'aurelia-templating-resources';\nimport {autoinject} from 'aurelia-framework';\n\n@autoinject()\nexport class MessageTestViewModel {\n    messages: Array<any> = [];\n\n    constructor(private signaler: BindingSignaler) {}\n\n    bind() {\n        window.addEventListener('message', (e) => {\n            console.log('message', e.data);\n            this.messages.push(e.data);\n\n            this.signaler.signal('message');\n        });\n    }\n}\n","<template>\n    <require from=\"resources/value-converters/json-value-converter\"></require>\n\n    <iframe src=\"/#game\" width=\"800\" height=\"600\"></iframe>\n    <div style=\"border: 1px solid black; width: 800px; height: 200px; overflow-y: auto;\">\n        <div repeat.for=\"message of messages\">${message | json & signal: 'message'}</div>\n    </div>\n</template>\n","import { FrameworkConfiguration, PLATFORM } from 'aurelia-framework';\n\nexport function configure(config: FrameworkConfiguration) {\n    config.globalResources(PLATFORM.moduleName('./phaser-game/phaser-game'));\n}\n","import { customElement, bindable, autoinject, inlineView } from \"aurelia-framework\";\nimport Phaser from 'phaser';\n\n@customElement('phaser-game')\n@autoinject()\n@inlineView('<template></template>')\nexport class PhaserGameCustomElement {\n    @bindable config: Phaser.Types.Core.GameConfig;\n    @bindable game: Phaser.Game;\n\n    constructor(protected element: Element) {\n\n    }\n\n    bind() {\n        this.config.parent = this.element as HTMLElement;\n        this.game = new Phaser.Game(this.config);\n    }\n}\n","export class FlagValueConverter {\r\n    fromView(value, source, flag) {\r\n        return value ? source | flag : source & ~flag;\r\n    }\r\n\r\n    toView(_value, source, flag) {\r\n        return (source & flag) === flag;\r\n    }\r\n}\r\n","export class IntegerArrayValueConverter {\n    fromView(value: string) {\n        // Remove anything but numbers and commas.\n        value = value.replace(/[^0-9,]/g, '');\n\n        // Remove any trailing comma.\n        if(value[value.length - 1] == ',')\n            value = value.substr(0, value.length - 1);\n\n        return JSON.parse(`[${value}]`);\n    }\n\n    toView(value: Array<number>) {\n        return JSON.stringify(value).substr(1, value.length * 2 - 1);\n    }\n}\n","export class IntegerValueConverter {\n    fromView(value) {\n        return parseInt(value);\n    }\n}\n","export class JsonValueConverter {\n    toView(value) {\n        return JSON.stringify(value, null, 2);\n    }\n}\n","import { LeaveTrigger } from 'enums/leave-trigger';\nimport { SettingsModel } from './../models/settings-model';\nimport Phaser from 'phaser';\nimport { CPUModel } from 'models/cpu-model';\n\nconst textStyle = { fontFamily: 'Arial', color: '#000000' };\n\n\nexport class CyberballScene extends Phaser.Scene {\n    private settings: SettingsModel;\n\n    // Game Objects:\n\n    private ballSprite: Phaser.GameObjects.Sprite;\n    private playerSprite: Phaser.GameObjects.Sprite;\n    private playerGroup: Phaser.Physics.Arcade.Group;\n    private cpuSprites: Phaser.GameObjects.Sprite[] = [];\n\n    // Gameplay Mechanics:\n\n    private playerHasBall = true;\n    private ballHeld = true;\n    private throwTarget: Phaser.GameObjects.Sprite;\n\n    private activeTimeout;\n\n    private absentPlayers: number[] = [];\n    private showPlayerLeave: boolean = false;\n\n    private gameEnded = false;\n\n    // Stats:\n\n    private throwCount = 0;\n    private scheduleIndex = 0;\n    private lastTime = Date.now();\n    private readonly startTime = Date.now();\n\n    constructor(settings: SettingsModel) {\n        super({});\n\n        this.settings = settings;\n    }\n\n    public preload() {\n        this.load.crossOrigin = 'anonymous';\n\n        // TODO: Load from settings.\n        this.load.image('ball', `${this.settings.baseUrl}/${this.settings.ballSprite}`);\n        this.load.multiatlas('player', `${this.settings.baseUrl}/player.json`, 'assets');\n\n        if(this.settings.player.portrait)\n            this.load.image('playerPortrait', 'https://cors-anywhere.herokuapp.com/' + this.settings.player.portrait);\n\n        this.settings.computerPlayers.forEach((cpu, i) => {\n            if(cpu.portrait)\n                this.load.image('cpuPortrait' + i, 'https://cors-anywhere.herokuapp.com/' + cpu.portrait);\n        });\n    }\n\n    public create() {\n        this.cameras.main.setBackgroundColor('#ffffff');\n\n        // Animations:\n\n        this.anims.create({\n            key: 'active',\n            frames: this.anims.generateFrameNames('player', { start: 1, end: 1, prefix: 'active/', suffix: '.png' })\n        });\n\n        this.anims.create({\n            key: 'idle',\n            frames: this.anims.generateFrameNames('player', { start: 1, end: 1, prefix: 'idle/', suffix: '.png' })\n        });\n\n        this.anims.create({\n            key: 'throw',\n            frameRate: 12,\n            frames: this.anims.generateFrameNames('player', { start: 1, end: 3, prefix: 'throw/', suffix: '.png' })\n        });\n\n        this.anims.create({\n            key: 'catch',\n            frames: this.anims.generateFrameNames('player', { start: 1, end: 1, prefix: 'catch/', suffix: '.png' })\n        });\n\n        // Player:\n\n        let playerPosition = this.getPlayerPosition();\n\n        this.playerGroup = this.physics.add.group({ immovable: true, allowGravity: false });\n        this.playerSprite = this.playerGroup.create(playerPosition.x, playerPosition.y, 'player', 'active/1.png');\n        this.playerSprite.setData('settings', this.settings.player);\n\n        if(this.settings.player.tint)\n            this.playerSprite.setTint(parseInt(this.settings.player.tint.substr(1), 16));\n\n        this.playerSprite.setData('name-object', this.add.text(playerPosition.x, playerPosition.y + this.playerSprite.height / 2 + 10, this.settings.player.name, textStyle).setOrigin(0.5));\n\n        if(this.settings.player.portrait) {\n            var portraitPosition = this.getPlayerPortraitPosition(this.playerSprite);\n            var image = this.add.image(portraitPosition.x, portraitPosition.y, 'playerPortrait');\n\n            image.setScale(this.settings.portraitHeight / image.height);\n        }\n\n        if((this.settings.player.leaveTrigger & LeaveTrigger.Time) === LeaveTrigger.Time) {\n            this.playerSprite.setData('leaveTime', Date.now() + this.getVariantValue(this.settings.player.leaveIgnored, this.settings.player.leaveIgnoredVariance) * 1000);\n        }\n\n        if((this.settings.player.leaveTrigger & LeaveTrigger.TimeIgnored) === LeaveTrigger.TimeIgnored) {\n            this.playerSprite.setData('leaveTimeIgnored', Date.now() + this.getVariantValue(this.settings.player.leaveTimeIgnored, this.settings.player.leaveTimeIgnoredVariance) * 1000);\n            console.log(Date.now(), this.playerSprite.getData('leaveTimeIgnored') - Date.now())\n\n        }\n\n        // CPU:\n\n        for (let i = 0; i < this.settings.computerPlayers.length; i++) {\n            let cpuPosition = this.getCPUPosition(i);\n            let cpuSprite: Phaser.GameObjects.Sprite = this.playerGroup.create(cpuPosition.x, cpuPosition.y, 'player', 'idle/1.png');\n\n            cpuSprite.setData('name-object', this.add.text(cpuPosition.x, cpuPosition.y + cpuSprite.height / 2 + 10, this.settings.computerPlayers[i].name, textStyle).setOrigin(0.5));\n\n            if(this.settings.computerPlayers[i].portrait) {\n                var portraitPosition = this.getCPUPortraitPosition(i, cpuSprite);\n                var image = this.add.image(portraitPosition.x, portraitPosition.y, 'cpuPortrait' + i);\n\n                image.setScale(this.settings.portraitHeight / image.height);\n            }\n\n            cpuSprite.flipX = cpuPosition.x > playerPosition.x;\n            cpuSprite.setData('settings', this.settings.computerPlayers[i]);\n\n            if(this.settings.computerPlayers[i].tint)\n                cpuSprite.setTint(parseInt(this.settings.computerPlayers[i].tint.substr(1), 16));\n\n            cpuSprite.setInteractive();\n            cpuSprite.on('pointerdown', (e) => {\n                if (this.playerHasBall) {\n                    // Ensure player and ball are facing the correct way on touch devices:\n                    this.playerSprite.flipX = this.input.x < this.playerSprite.x;\n\n                    let ballPosition = this.getActiveBallPosition(this.playerSprite);\n                    this.ballSprite.x = ballPosition.x;\n                    this.ballSprite.y = ballPosition.y;\n\n                    this.throwBall(this.playerSprite, cpuSprite);\n                }\n            });\n\n            if((this.settings.computerPlayers[i].leaveTrigger & LeaveTrigger.Time) === LeaveTrigger.Time) {\n                cpuSprite.setData('leaveTime', Date.now() + this.getVariantValue(this.settings.computerPlayers[i].leaveIgnored, this.settings.computerPlayers[i].leaveIgnoredVariance) * 1000);\n            }\n\n            if((this.settings.computerPlayers[i].leaveTrigger & LeaveTrigger.TimeIgnored) === LeaveTrigger.TimeIgnored) {\n                cpuSprite.setData('leaveTimeIgnored', Date.now() + this.getVariantValue(this.settings.computerPlayers[i].leaveTimeIgnored, this.settings.computerPlayers[i].leaveTimeIgnoredVariance) * 1000);\n            }\n\n            this.cpuSprites.push(cpuSprite);\n        }\n\n        // Ball:\n\n        let ballPosition = this.getActiveBallPosition(this.playerSprite);\n        this.ballSprite = this.physics.add.sprite(ballPosition.x, ballPosition.y, 'ball');\n\n        if(this.settings.ballTint)\n            this.ballSprite.setTint(parseInt(this.settings.ballTint.substr(1), 16));\n\n        this.physics.add.overlap(this.ballSprite, this.playerGroup, (_b, receiver) => {\n            if (!this.ballHeld && receiver === this.throwTarget)\n                this.catchBall(receiver as Phaser.GameObjects.Sprite);\n        });\n    }\n\n    public update() {\n        if (this.playerHasBall) {\n            this.playerSprite.play('active');\n            this.playerSprite.flipX = this.input.x < this.playerSprite.x;\n\n            let ballPosition = this.getActiveBallPosition(this.playerSprite);\n            this.ballSprite.x = ballPosition.x;\n            this.ballSprite.y = ballPosition.y;\n        } else if (!this.ballHeld) {\n            // Eyes on the ball:\n            this.playerGroup.getChildren().forEach(c => {\n                let sprite = c as Phaser.GameObjects.Sprite;\n                if (sprite.frame.name.includes('idle'))\n                    sprite.flipX = this.ballSprite.x < sprite.x\n            });\n        }\n\n        // Player may leave after time has passed:\n        if(!this.showPlayerLeave && (this.settings.player.leaveTrigger & LeaveTrigger.Time) === LeaveTrigger.Time &&\n                Date.now() > this.playerSprite.getData('leaveTime')) {\n            this.showPlayerLeave = true;\n            this.postEvent('player-may-leave', {\n                reason: 'time elapsed'\n            });\n        }\n        // Player may leave after ignored for a time:\n        else if (!this.playerHasBall && !this.showPlayerLeave && (this.settings.player.leaveTrigger & LeaveTrigger.TimeIgnored) === LeaveTrigger.TimeIgnored &&\n                    Date.now() > this.playerSprite.getData('leaveTimeIgnored')) {\n            this.showPlayerLeave = true;\n            this.postEvent('player-may-leave', {\n                reason: 'time ignored'\n            });\n        }\n\n        this.cpuSprites.forEach(cpu => {\n            // CPU shouldn't leave if they:\n            //  - have the ball or are about to catch the ball\n            //  - have already left\n            if (cpu == this.throwTarget || cpu.getData('absent'))\n                return;\n\n            let settings = cpu.getData('settings') as CPUModel;\n\n            // CPU may leave after some time\n            if((settings.leaveTrigger & LeaveTrigger.Time) === LeaveTrigger.Time &&\n                    Date.now() > cpu.getData('leaveTime')) {\n                this.leaveGame(cpu, 'time elapsed');\n            }\n            // CPU may leave after ignored for a time:\n            else if ((settings.leaveTrigger & LeaveTrigger.TimeIgnored) === LeaveTrigger.TimeIgnored &&\n                    Date.now() > cpu.getData('leaveTimeIgnored')) {\n                this.leaveGame(cpu, 'time ignored');\n            }\n        });\n    }\n\n    public gameOver() {\n        if (this.gameEnded)\n            return;\n\n        this.gameEnded = true;\n\n        this.postEvent('game-end');\n\n        // Stop future throws:\n        clearTimeout(this.activeTimeout);\n        this.playerGroup.children.each(child => child.removeAllListeners());\n\n        // Draw game over screen:\n        this.add.rectangle(this.sys.canvas.width / 2, this.sys.canvas.height / 2, this.sys.canvas.width, this.sys.canvas.height, 0xdddddd, this.settings.gameOverOpacity);\n        this.add.text(this.sys.canvas.width / 2, this.sys.canvas.height / 2, this.settings.gameOverText, textStyle).setOrigin(0.5);\n    }\n\n    // Mechanics:\n\n    public throwBall(thrower: Phaser.GameObjects.Sprite, receiver: Phaser.GameObjects.Sprite) {\n        this.postEvent('throw', {\n            thrower: thrower.getData('settings').name,\n            receiver: receiver.getData('settings').name,\n            wait: Date.now() - this.lastTime\n        });\n\n        this.lastTime = Date.now();\n\n        // Update trackers:\n\n        // Wait until the player throws the ball to reset their ignored timer, so they cannot ignore themselves.\n        let throwerSettings = thrower.getData('settings');\n        if((throwerSettings.leaveTrigger & LeaveTrigger.TimeIgnored) === LeaveTrigger.TimeIgnored) {\n            receiver.setData('leaveTimeIgnored', Date.now() + this.getVariantValue(throwerSettings.leaveTimeIgnored, throwerSettings.leaveTimeIgnoredVariance) * 1000);\n        }\n\n        this.playerHasBall = this.ballHeld = false;\n        this.throwTarget = receiver;\n\n        this.throwCount++;\n\n        // Player animation:\n\n        thrower.play('throw');\n        thrower.playAfterRepeat('idle');\n\n        // Ball physics:\n\n        let ballTargetPosition = this.getCaughtBallPosition(receiver);\n        this.physics.moveTo(this.ballSprite, ballTargetPosition.x, ballTargetPosition.y, this.settings.ballSpeed);\n    }\n\n    public catchBall(receiver: Phaser.GameObjects.Sprite) {\n        // Update trackers:\n\n        this.ballHeld = true;\n        receiver.setData('throwsIgnored', 0)\n\n        // Player animation:\n\n        receiver.play('catch');\n\n        // Ball physics:\n\n        let ballPosition = this.getCaughtBallPosition(receiver);\n        (this.ballSprite.body as Phaser.Physics.Arcade.Body).reset(ballPosition.x, ballPosition.y);\n\n        // Check for leavers:\n\n        // Player may leave after a number of turns:\n        if(!this.showPlayerLeave && (this.settings.player.leaveTrigger & LeaveTrigger.Turn) === LeaveTrigger.Turn) {\n            let leaveThrows = this.getVariantValue(this.settings.player.leaveTurn, this.settings.player.leaveTurnVariance);\n\n            if (this.throwCount >= leaveThrows) {\n                this.showPlayerLeave = true;\n                this.postEvent('player-may-leave', {\n                    reason: 'throws elapsed'\n                });\n            }\n        }\n        // Player may leave after ignored for a number of turns:\n        else if(!this.showPlayerLeave && (this.settings.player.leaveTrigger & LeaveTrigger.Ignored) === LeaveTrigger.Ignored) {\n            let leaveThrows = this.getVariantValue(this.settings.player.leaveIgnored, this.settings.player.leaveIgnoredVariance);\n            let playerThrowsIgnored = this.playerSprite.getData('throwsIgnored') ?? 0;\n\n            if(this.playerSprite != receiver)\n                this.playerSprite.setData('throwsIgnored', ++playerThrowsIgnored);\n\n            if (playerThrowsIgnored >= leaveThrows) {\n                this.showPlayerLeave = true;\n                this.postEvent('player-may-leave', {\n                    reason: 'throws ignored'\n                });\n            }\n        }\n\n        this.cpuSprites.forEach(cpu => {\n            // CPU shouldn't leave if they:\n            //  - have the ball\n            //  - have already left\n            if (cpu == receiver || cpu.getData('absent'))\n                return;\n\n            let settings = cpu.getData('settings') as CPUModel;\n            let throwsIgnored = (cpu.getData('throwsIgnored') ?? 0) + 1;\n            cpu.setData('throwsIgnored', throwsIgnored);\n\n            // CPU may leave after a number of turns:\n            if((settings.leaveTrigger & LeaveTrigger.Turn) === LeaveTrigger.Turn) {\n                let leaveThrows = this.getVariantValue(settings.leaveTurn, settings.leaveTurnVariance);\n\n                if (this.throwCount >= leaveThrows && this.checkChance(settings.leaveTurnChance))\n                    this.leaveGame(cpu, 'throws elapsed');\n            }\n            // CPU may leave after ignored for a number of turns:\n            else if((settings.leaveTrigger & LeaveTrigger.Ignored) === LeaveTrigger.Ignored) {\n                let leaveThrows = this.getVariantValue(settings.leaveIgnored, settings.leaveIgnoredVariance);\n\n                if (throwsIgnored >= leaveThrows && this.checkChance(settings.leaveIgnoredChance))\n                    this.leaveGame(cpu, 'throws ignored');\n            }\n        });\n\n        // The game ends at the end of the schedule or when reaching the throw count.\n\n        if (\n            (this.settings.useSchedule && this.scheduleIndex === this.settings.schedule.length) ||\n            (this.settings.useSchedule && this.settings.scheduleHonorsThrowCount && this.throwCount >= this.settings.throwCount) ||\n            (!this.settings.useSchedule && this.throwCount >= this.settings.throwCount)\n        ) {\n            this.gameOver();\n            return;\n        }\n\n        // Prepare for next throw:\n\n        if (receiver === this.playerSprite) {\n            this.playerHasBall = true;\n        } else {\n            let settings = receiver.getData('settings') as CPUModel;\n\n            this.activeTimeout = setTimeout(() => {\n                receiver.play('active');\n\n                ballPosition = this.getActiveBallPosition(receiver);\n                this.ballSprite.x = ballPosition.x;\n                this.ballSprite.y = ballPosition.y;\n\n                this.activeTimeout = setTimeout(() => {\n                    if (this.settings.useSchedule) {\n                        // Skip self and absent players in schedule.\n                        while(this.settings.schedule[this.scheduleIndex] === this.playerGroup.getChildren().indexOf(receiver) &&\n                            !this.absentPlayers.includes(this.settings.schedule[this.scheduleIndex]))\n                            this.scheduleIndex++\n\n                        this.throwBall(receiver, this.playerGroup.getChildren()[this.settings.schedule[this.scheduleIndex]] as Phaser.GameObjects.Sprite)\n                        this.scheduleIndex++;\n                    } else {\n                        let random = Math.random() * 100;\n\n                        // A psuedo-random target is selected by subtracting the target preference chance from the random number until 0 is reached\n                        for (var i = 0; i < settings.targetPreference.length; i++) {\n                            random -= settings.targetPreference[i];\n\n                            if (random <= 0) {\n                                // Exclude self\n                                if (i >= this.playerGroup.getChildren().indexOf(receiver))\n                                    i++\n\n                                this.throwBall(receiver, this.playerGroup.getChildren()[i] as Phaser.GameObjects.Sprite);\n\n                                break;\n                            }\n                        }\n                    }\n                }, this.getVariantValue(settings.throwDelay, settings.throwDelayVariance));\n            }, this.getVariantValue(settings.catchDelay, settings.catchDelayVariance))\n        }\n    }\n\n    public leaveGame(player: Phaser.GameObjects.Sprite, reason: string = '') {\n        let nameObject = player.getData('name-object') as Phaser.GameObjects.Text;\n        let playerIndex = this.playerGroup.getChildren().indexOf(player);\n\n        this.absentPlayers.push(playerIndex);\n        player.setData('absent', true);\n\n        nameObject.setText([nameObject.text, 'has left the game.']);\n\n        // Deactivate player object\n\n        player.removeAllListeners();\n        player.setVisible(false);\n\n        this.postEvent('leave', {\n            leaver: player.getData('settings').name,\n            reason: reason\n        });\n\n        // Redistribute throw target weights:\n\n        console.log('pindex', playerIndex);\n\n        this.settings.computerPlayers.forEach((cpu, i) => {\n            if(this.absentPlayers.includes(i + 1))\n                return;\n\n            console.log('distribute before', i, cpu.targetPreference);\n\n            let targetIndex = playerIndex > (i + 1) ? playerIndex - 1 : playerIndex;\n            let targetWeight = cpu.targetPreference[targetIndex];\n            cpu.targetPreference[targetIndex] = 0;\n            let total = cpu.targetPreference.reduce((acc, cur) => acc + cur);\n\n            for(let k = 0; k < cpu.targetPreference.length; k++) {\n                if (cpu.targetPreference[k] == 0)\n                    continue;\n\n                cpu.targetPreference[k] += cpu.targetPreference[k] / total * targetWeight;\n            }\n\n            console.log('distribute after', i, cpu.targetPreference);\n        });\n\n        // If there is only one player left, end the game:\n        if (this.absentPlayers.length >= this.settings.computerPlayers.length) {\n            this.gameOver();\n            return;\n        }\n\n        // Check if this triggers other players leaving:\n\n        if(!this.showPlayerLeave && (this.settings.player.leaveTrigger & LeaveTrigger.OtherLeaver) === LeaveTrigger.OtherLeaver) {\n            console.log(this.absentPlayers.length, this.settings.player.leaveOtherLeaver);\n            if (this.absentPlayers.length >= this.settings.player.leaveOtherLeaver) {\n                this.showPlayerLeave = true;\n                this.postEvent('player-may-leave', {\n                    reason: 'other leavers'\n                });\n            }\n        }\n\n        this.cpuSprites.forEach(cpu => {\n            let settings = cpu.getData('settings') as CPUModel;\n\n            // CPU shouldn't leave if they:\n            //  - have the ball\n            //  - have already left\n            if (cpu == this.throwTarget || cpu.getData('absent'))\n                return;\n\n            if((settings.leaveTrigger & LeaveTrigger.OtherLeaver) === LeaveTrigger.OtherLeaver) {\n                if (this.absentPlayers.length >= settings.leaveOtherLeaver && this.checkChance(settings.leaveOtherLeaverChance))\n                    this.leaveGame(cpu, 'other leavers');\n            }\n        });\n    }\n\n    // Helpers:\n\n    getCPUPosition(i: number): Phaser.Geom.Point {\n        // TODO: Increase padding when portaits are enabled.\n        let padding = 75;\n        let extraPadding = this.settings.hasPortraits ? this.settings.portraitHeight + this.settings.portraitPadding * 2 : 0;\n\n        if(this.settings.computerPlayers.length === 1) {\n            return new Phaser.Geom.Point(\n                this.sys.canvas.width / 2,\n                padding + extraPadding\n            );\n        }\n\n        return new Phaser.Geom.Point(\n            // Evenly divide the width of the screen by the number of players.\n            ((this.sys.canvas.width - (padding * 2)) / (this.settings.computerPlayers.length - 1)) * i + padding,\n            // First and last player are closer in the middle, others stand along the edge.\n            i === 0 || i === this.settings.computerPlayers.length - 1\n                ? (this.sys.canvas.height / 2)\n                : padding + extraPadding\n        );\n    }\n\n    getCPUPortraitPosition(i: number, sprite: Phaser.GameObjects.Sprite): Phaser.Geom.Point  {\n        let position = this.getCPUPosition(i);\n\n        return new Phaser.Geom.Point(\n            position.x,\n            position.y - this.settings.portraitHeight + this.settings.portraitPadding * 2 - sprite.height / 2\n        );\n    }\n\n    getPlayerPosition(): Phaser.Geom.Point {\n        let padding = 75;\n\n        if(this.settings.hasPortraits)\n            padding += this.settings.portraitHeight + this.settings.portraitPadding * 2;\n\n        return new Phaser.Geom.Point(\n            this.sys.canvas.width / 2,\n            this.sys.canvas.height - padding\n        );\n    }\n\n    getPlayerPortraitPosition(sprite: Phaser.GameObjects.Sprite): Phaser.Geom.Point {\n        var position = this.getPlayerPosition();\n\n        return new Phaser.Geom.Point(\n            position.x,\n            position.y + this.settings.portraitHeight / 2 + this.settings.portraitPadding * 2 + sprite.height / 2 + 10\n        );\n    }\n\n    getCaughtBallPosition(target: Phaser.GameObjects.Sprite) {\n        return new Phaser.Geom.Point(target.x + (target.flipX ? -50 : 50), target.y - 15);\n    }\n\n    getActiveBallPosition(target: Phaser.GameObjects.Sprite) {\n        return new Phaser.Geom.Point(target.x + (target.flipX ? 40 : -40), target.y - 20);\n    }\n\n    getVariantValue(base: number, variance: number): number {\n        return base + (Phaser.Math.RND.between(0, variance) * Phaser.Math.RND.sign());\n    }\n\n    checkChance(chance: number): boolean {\n        return Phaser.Math.RND.between(0, 100) <= chance;\n    }\n\n    postEvent(type: string, data: any = {}): void {\n        console.log('post event: ' + type, data);\n\n        window.parent.postMessage({\n            type: type,\n            ...data\n        }, '*');\n    }\n}\n"]}