{"version":3,"sources":["../src/app.ts","../src/app.html","../src/environment.ts","../src/helpers.ts","../src/main.ts","../src/models/banter-model.ts","../src/models/cpu-model.ts","../src/models/player-model.ts","../src/models/settings-model.ts","../src/pages/game.ts","../src/pages/game.css","../src/pages/game.html","../src/pages/home.ts","../src/pages/home.html","../src/resources/index.ts","../src/resources/phaser-game/phaser-game.ts","../src/resources/value-converters/integer-value-converter.ts","../src/resources/value-converters/json-value-converter.ts","../src/resources/value-converters/number-value-converter.ts","../src/scenes/cyberball.ts"],"names":[],"mappings":"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","file":"app-bundle.js","sourcesContent":["import { RouterConfiguration, Router } from 'aurelia-router';\n\nexport class App {\n    router: Router;\n\n    configureRouter(config: RouterConfiguration, router: Router): void {\n        this.router = router;\n\n        config.title = 'Cyberball';\n\n        config.map([\n            { route: ['', 'home'], name: 'home', moduleId: 'pages/home' },\n            { route: 'game', name: 'game', moduleId: 'pages/game' }\n        ]);\n    }\n}\n","<template>\n    <router-view></router-view>\n</template>\n","export default {\n  debug: true,\n  testing: true\n};\n","export function getCaughtBallPosition(player: Phaser.GameObjects.Sprite) {\n    return { x: player.x + (player.flipX ? -50 : 50), y: player.y - 15 };\n}\n\nexport function getActiveBallPosition(player: Phaser.GameObjects.Sprite) {\n    return { x: player.x + (player.flipX ? 40 : -40), y: player.y - 20 };\n}\n","import {Aurelia} from 'aurelia-framework'\nimport environment from './environment';\n\nexport function configure(aurelia: Aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  aurelia.use.developmentLogging(environment.debug ? 'debug' : 'warn');\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","export class BanterModel {\n    chance: number;\n    delay: number;\n    delayVariance: number;\n    messages: Array<string>;\n}\n","import { BanterModel } from './banter-model';\nimport { PlayerModel } from './player-model';\n\nexport class CPUModel extends PlayerModel {\n    // A set of weights for each possible target, adding up to 100%.\n    targetPreference: Array<number> = [50, 50];\n\n    throwDelay: number = 500;\n    throwDelayVariance: number = 200;\n\n    catchDelay: number = 500;\n    catchDelayVariance: number = 200;\n\n    introductionBanter?: BanterModel;\n    throwBanter?: BanterModel\n    catchBanter?: BanterModel\n    leftOutBanter?: BanterModel\n\n    boredomBanterThreshold?: number;\n    boredomBanter?: BanterModel;\n\n    constructor(init?: Partial<CPUModel>) {\n        super();\n\n        Object.assign(this, init);\n    }\n}\n","export class PlayerModel {\n    name: string;\n}\n","import { PlayerModel } from './player-model';\nimport { CPUModel } from './cpu-model';\n\nexport class SettingsModel {\n    player: PlayerModel = new PlayerModel();\n    computerPlayers: Array<CPUModel>;\n\n    // Gameplay\n    throwCount: number = 10;\n    ballSpeed: number = 500;\n\n    useSchedule: boolean = false;\n    scheduleHonorsThrowCount: boolean = false;\n    schedule: Array<number> = [\n        1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0\n    ];\n\n    // Graphics\n    baseUrl: string = './assets';\n    ballSprite: string = 'ball.png';\n\n    // Misc\n    chatEnabled: boolean = false;\n\n    constructor(init?: Partial<SettingsModel>) {\n        Object.assign(this, init);\n    }\n}\n\nexport const defaultSettings = new SettingsModel({\n    player: {\n       name: 'Player 1'\n    },\n    computerPlayers: [\n        new CPUModel({\n            name: 'Player 2'\n        }),\n        new CPUModel({\n            name: 'Player 3'\n        })\n    ]\n});\n","import { CyberballScene } from './../scenes/cyberball';\nimport { defaultSettings, SettingsModel } from './../models/settings-model';\nimport Phaser from 'phaser';\n\n//     // TODO: Use events to talk to Qualtrics?\n//     //setTimeout(() => { window.dispatchEvent(new CustomEvent('complete', { detail: { test: 'test' } }))}, 1000)\n\n\nexport class GameViewModel {\n    settings: SettingsModel = defaultSettings;\n\n    // Chat:\n\n    chatMessage: string;\n    chatMessages: Array<{sender: string, text: string}> = [];\n\n    sendMessage() {\n        this.chatMessages.push({\n            sender: this.settings.player.name,\n            text: this.chatMessage\n        });\n\n        this.chatMessage = '';\n    }\n\n    // Game:\n\n    gameWidth = 800;\n    gameHeight = 460;\n\n    gameConfig: Phaser.Types.Core.GameConfig = {\n        type: Phaser.AUTO,\n        width: this.gameWidth,\n        height: this.gameHeight,\n        scene: new CyberballScene(defaultSettings),\n        physics: {\n            default: 'arcade',\n            arcade: {\n                debug: true\n            }\n        }\n    }\n}\n",".chat {\n\n}\n\n.chat-log {\n    border: 1px solid black;\n    border-bottom: 0;\n    height: 100px;\n    overflow-y: auto;\n}\n\n.chat-input {\n    display: flex;\n}\n\n.chat-input input {\n    flex: 1;\n}\n","<template>\n    <require from=\"./game.css\"></require>\n\n    <h1>Cyberball</h1>\n\n    <phaser-game config.bind=\"gameConfig\"></phaser-game>\n\n    <div  if.bind=\"settings.chatEnabled\" class=\"chat\" css=\"width: ${gameWidth}px\">\n        <div class=\"chat-log\">\n            <div repeat.for=\"message of chatMessages\">\n                <strong>${message.sender}</strong>: <span>${message.text}</span>\n            </div>\n        </div>\n\n        <form class=\"chat-input\" submit.delegate=\"sendMessage()\">\n            <input value.bind=\"chatMessage\" />\n            <button type=\"submit\">Send</button>\n        </form>\n    </div>\n</template>\n","import {BindingSignaler} from 'aurelia-templating-resources';\nimport {autoinject} from 'aurelia-framework';\nimport { SettingsModel, defaultSettings } from \"models/settings-model\";\n\n@autoinject()\nexport class HomeViewModel {\n    settings: SettingsModel = defaultSettings;\n\n    constructor(private signaler: BindingSignaler) {}\n\n    saveSettings() {\n        console.log('settings');\n        this.signaler.signal('save-settings');\n    }\n}\n","<template>\n    <require from=\"resources/value-converters/json-value-converter\"></require>\n    <require from=\"resources/value-converters/integer-value-converter\"></require>\n\n    <style>\n        body {\n            background: #111;\n            color: #eee;\n            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n        }\n\n        .input {\n            display: flex;\n            margin-bottom: 5px;\n        }\n\n        label {\n            width: 180px;\n        }\n\n        input[type=text], input[type=number] {\n            flex: 1;\n        }\n    </style>\n\n    <div style=\"display: flex; height: 100%;\">\n        <div style=\"margin-right: 20px;\">\n            <h1>Cyberball Configuration Builder</h1>\n\n            <h2>Player</h2>\n\n            <div class=\"input\">\n                <label for=\"player.name\">Name</label>\n                <input type=\"text\" value.bind=\"settings.player.name\" />\n            </div>\n\n            <h2>CPUs</h2>\n\n            <div repeat.for=\"cpu of settings.computerPlayers\">\n                <div class=\"input\">\n                    <label>Name</label>\n                    <input type=\"text\" value.bind=\"cpu.name\" />\n                </div>\n\n                <div class=\"input\">\n                    <label>Throw Delay</label>\n                    <input type=\"number\" value.bind=\"cpu.throwDelay | integer\" />\n                </div>\n\n                <div class=\"input\">\n                    <label>Throw Delay Variance</label>\n                    <input type=\"number\" value.bind=\"cpu.throwDelayVariance | integer\" />\n                </div>\n\n                <div class=\"input\">\n                    <label>Catch Delay</label>\n                    <input type=\"number\" value.bind=\"cpu.catchDelay | integer\" />\n                </div>\n\n                <div class=\"input\">\n                    <label>Catch Delay Variance</label>\n                    <input type=\"number\" value.bind=\"cpu.catchDelayVariance | integer\" />\n                </div>\n\n                <hr />\n            </div>\n\n            <h2>Gameplay</h2>\n\n            <div class=\"input\">\n                <label>Throw Count</label>\n                <input type=\"number\" value.bind=\"settings.throwCount | integer\" />\n            </div>\n\n            <div class=\"input\">\n                <label>Ball Speed</label>\n                <input type=\"number\" value.bind=\"settings.ballSpeed | integer\" />\n            </div>\n\n            <div class=\"input\">\n                <label>Use Schedule</label>\n                <input type=\"checkbox\" checked.bind=\"settings.useSchedule\" />\n            </div>\n\n            <div class=\"input\">\n                <label>Schedule Honors Throw Count</label>\n                <input type=\"checkbox\" checked.bind=\"settings.scheduleHonorsThrowCount\" />\n            </div>\n\n            <button click.delegate=\"saveSettings()\">Save</button>\n        </div>\n\n        <div style=\"overflow-y: auto;\">\n            <pre>${settings | json & signal: 'save-settings'}</pre>\n        </div>\n    </div>\n</template>\n","import { FrameworkConfiguration, PLATFORM } from 'aurelia-framework';\n\nexport function configure(config: FrameworkConfiguration) {\n    config.globalResources(PLATFORM.moduleName('./phaser-game/phaser-game'));\n}\n","import { customElement, bindable, autoinject, inlineView } from \"aurelia-framework\";\nimport Phaser from 'phaser';\n\n@customElement('phaser-game')\n@autoinject()\n@inlineView('<template></template>')\nexport class PhaserGameCustomElement {\n    @bindable config: Phaser.Types.Core.GameConfig;\n    @bindable game: Phaser.Game;\n\n    constructor(protected element: Element) {\n\n    }\n\n    bind() {\n        this.config.parent = this.element as HTMLElement;\n        this.game = new Phaser.Game(this.config);\n    }\n}\n","export class IntegerValueConverter {\n    fromView(value) {\n        return parseInt(value);\n    }\n}\n","export class JsonValueConverter {\n    toView(value) {\n        return JSON.stringify(value, null, 2);\n    }\n}\n","export class IntegerValueConverter {\n    fromView(value) {\n        return parseInt(value);\n    }\n}\n","import { SettingsModel } from './../models/settings-model';\nimport Phaser from 'phaser';\nimport { CPUModel } from 'models/cpu-model';\n\nconst textStyle = { fontFamily: 'Arial', color: '#000000' };\n\n\nexport class CyberballScene extends Phaser.Scene {\n    private settings: SettingsModel;\n\n    // Game Objects:\n\n    private ballSprite: Phaser.GameObjects.Sprite;\n    private playerSprite: Phaser.GameObjects.Sprite;\n    private playerGroup: Phaser.Physics.Arcade.Group;\n\n    // Gameplay Mechanics:\n\n    private playerHasBall = true;\n    private ballHeld = true;\n    private throwTarget: Phaser.GameObjects.Sprite;\n\n    // Stats:\n\n    private throwCount = 0;\n\n    constructor(settings: SettingsModel) {\n        super({});\n\n        this.settings = settings;\n    }\n\n    public preload() {\n        // TODO: Load from settings.\n        this.load.image('ball', `${this.settings.baseUrl}/${this.settings.ballSprite}`);\n        this.load.multiatlas('player', `./assets/player.json`, 'assets');\n    }\n\n    public create() {\n        this.cameras.main.setBackgroundColor('#ffffff');\n\n        // Animations:\n\n        this.anims.create({\n            key: 'active',\n            frames: this.anims.generateFrameNames('player', { start: 1, end: 1, prefix: 'active/', suffix: '.png' })\n        });\n\n        this.anims.create({\n            key: 'idle',\n            frames: this.anims.generateFrameNames('player', { start: 1, end: 1, prefix: 'idle/', suffix: '.png' })\n        });\n\n        this.anims.create({\n            key: 'throw',\n            frameRate: 12,\n            frames: this.anims.generateFrameNames('player', { start: 1, end: 3, prefix: 'throw/', suffix: '.png' })\n        });\n\n        this.anims.create({\n            key: 'catch',\n            frames: this.anims.generateFrameNames('player', { start: 1, end: 1, prefix: 'catch/', suffix: '.png' })\n        });\n\n        // Player:\n\n        let playerPosition = this.getPlayerPosition();\n\n        this.playerGroup = this.physics.add.group({ immovable: true, allowGravity: false });\n        this.playerSprite = this.playerGroup.create(playerPosition.x, playerPosition.y, 'player', 'active/1.png');\n\n        this.add.text(playerPosition.x, playerPosition.y + this.playerSprite.height / 2 + 10, this.settings.player.name, textStyle).setOrigin(0.5);\n\n        console.log(this.playerSprite);\n\n        // CPU:\n\n        for (let i = 0; i < this.settings.computerPlayers.length; i++) {\n            let cpuPosition = this.getCPUPosition(i);\n            let cpuSprite: Phaser.GameObjects.Sprite = this.playerGroup.create(cpuPosition.x, cpuPosition.y, 'player', 'idle/1.png');\n\n            this.add.text(cpuPosition.x, cpuPosition.y + cpuSprite.height / 2 + 10, this.settings.computerPlayers[i].name, textStyle).setOrigin(0.5);\n\n            cpuSprite.flipX = cpuPosition.x > playerPosition.x;\n            cpuSprite.setData('settings', this.settings.computerPlayers[i]);\n\n            cpuSprite.setInteractive();\n            cpuSprite.on('pointerdown', (e) => {\n                if (this.playerHasBall)\n                    this.throwBall(this.playerSprite, cpuSprite);\n            });\n        }\n\n        // Ball:\n\n        let ballPosition = this.getActiveBallPosition(this.playerSprite);\n        this.ballSprite = this.physics.add.sprite(ballPosition.x, ballPosition.y, 'ball');\n\n        this.physics.add.overlap(this.ballSprite, this.playerGroup, (_b, receiver) => {\n            if (!this.ballHeld && receiver === this.throwTarget)\n                this.catchBall(receiver as Phaser.GameObjects.Sprite);\n        });\n    }\n\n    public update() {\n        if (this.playerHasBall) {\n            this.playerSprite.play('active');\n            this.playerSprite.flipX = this.input.x < this.playerSprite.x;\n\n            let ballPosition = this.getActiveBallPosition(this.playerSprite);\n            this.ballSprite.x = ballPosition.x;\n            this.ballSprite.y = ballPosition.y;\n        } else if(!this.ballHeld) {\n            // Eyes on the ball:\n            this.playerGroup.getChildren().forEach(c => {\n                let sprite = c as Phaser.GameObjects.Sprite;\n                if(sprite.frame.name.includes('idle'))\n                    sprite.flipX = this.ballSprite.x < sprite.x\n            });\n        }\n    }\n\n    // Mechanics:\n\n    public throwBall(thrower: Phaser.GameObjects.Sprite, receiver: Phaser.GameObjects.Sprite) {\n        // Update trackers:\n\n        this.playerHasBall = this.ballHeld = false;\n        this.throwTarget = receiver;\n\n        this.throwCount++;\n\n        // Player animation:\n\n        thrower.play('throw');\n        thrower.anims.currentAnim.once('complete', () => thrower.play('idle'));\n\n        // Ball physics:\n\n        let ballTargetPosition = this.getCaughtBallPosition(receiver);\n        this.physics.moveTo(this.ballSprite, ballTargetPosition.x, ballTargetPosition.y, 500);\n    }\n\n    public catchBall(receiver: Phaser.GameObjects.Sprite) {\n        // Update trackers:\n\n        this.ballHeld = true;\n        this.throwCount++;\n\n        if(this.throwCount >= this.settings.throwCount) {\n            // TODO: Trigger game end.\n        }\n\n        // Player animation:\n\n        receiver.play('catch');\n\n        // Ball physics:\n\n        let ballPosition = this.getCaughtBallPosition(receiver);\n        (this.ballSprite.body as Phaser.Physics.Arcade.Body).reset(ballPosition.x, ballPosition.y);\n\n        if (receiver === this.playerSprite) {\n            this.playerHasBall = true;\n        } else {\n            let settings = receiver.getData('settings') as CPUModel;\n\n            setTimeout(() => {\n                receiver.play('active');\n\n                ballPosition = this.getActiveBallPosition(receiver);\n                this.ballSprite.x = ballPosition.x;\n                this.ballSprite.y = ballPosition.y;\n\n                setTimeout(() => {\n                    let random = Math.random() * 100;\n\n                    // A psuedo-random target is selected by subtracting the target preference chance from the random number until 0 is reached\n                    for (var i = 0; i < settings.targetPreference.length; i++) {\n                        random -= settings.targetPreference[i];\n\n                        if (random <= 0) {\n                            // Exclude self\n                            if(i >= this.playerGroup.getChildren().indexOf(receiver))\n                                i++\n\n                            this.throwBall(receiver, this.playerGroup.getChildren()[i] as Phaser.GameObjects.Sprite);\n\n                            break;\n                        }\n                    }\n                }, this.calculateTimeout(settings.throwDelay, settings.throwDelayVariance));\n            }, this.calculateTimeout(settings.catchDelay, settings.catchDelayVariance))\n        }\n    }\n\n    // Helpers:\n\n    getCPUPosition(i: number) {\n        // TODO: Increase padding when portaits are enabled.\n        let padding = 75;\n\n        return new Phaser.Geom.Point(\n            // Evenly divide the width of the screen by the number of players.\n            ((this.sys.canvas.width - (padding * 2)) / (this.settings.computerPlayers.length - 1)) * i + padding,\n            i === 0 || i === this.settings.computerPlayers.length - 1 ? this.sys.canvas.height / 2 : padding\n        );\n    }\n\n    getPlayerPosition() {\n        let padding = 75;\n\n        return new Phaser.Geom.Point(\n            this.sys.canvas.width / 2,\n            this.sys.canvas.height - padding\n        );\n    }\n\n    getCaughtBallPosition(target: Phaser.GameObjects.Sprite) {\n        return new Phaser.Geom.Point(target.x + (target.flipX ? -50 : 50), target.y - 15);\n    }\n\n    getActiveBallPosition(target: Phaser.GameObjects.Sprite) {\n        return new Phaser.Geom.Point(target.x + (target.flipX ? 40 : -40), target.y - 20);\n    }\n\n    calculateTimeout(delay: number, variance: number) {\n        return delay + Math.random() * variance;\n    }\n}\n"]}