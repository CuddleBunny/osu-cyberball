{"version":3,"sources":["../src/app.ts","../src/app.html","../src/environment.ts","../src/helpers.ts","../src/main.ts","../src/models/banter-model.ts","../src/models/cpu-model.ts","../src/models/player-model.ts","../src/models/settings-model.ts","../src/pages/game.ts","../src/pages/game.html","../src/pages/home.ts","../src/pages/home.html","../src/resources/index.ts","../src/resources/phaser-game/phaser-game.ts","../src/scenes/cyberball.ts"],"names":[],"mappings":"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","file":"app-bundle.js","sourcesContent":["import { RouterConfiguration, Router } from 'aurelia-router';\n\nexport class App {\n    router: Router;\n\n    configureRouter(config: RouterConfiguration, router: Router): void {\n        this.router = router;\n\n        config.title = 'Cyberball';\n\n        config.map([\n            { route: ['', 'home'], name: 'home', moduleId: 'pages/home' },\n            { route: 'game', name: 'game', moduleId: 'pages/game' }\n        ]);\n    }\n}\n","<template>\n    <router-view></router-view>\n</template>\n","export default {\n  debug: true,\n  testing: true\n};\n","export function getCaughtBallPosition(player: Phaser.GameObjects.Sprite) {\n    return { x: player.x + (player.flipX ? -50 : 50), y: player.y - 15 };\n}\n\nexport function getActiveBallPosition(player: Phaser.GameObjects.Sprite) {\n    return { x: player.x + (player.flipX ? 40 : -40), y: player.y - 20 };\n}\n","import {Aurelia} from 'aurelia-framework'\nimport environment from './environment';\n\nexport function configure(aurelia: Aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  aurelia.use.developmentLogging(environment.debug ? 'debug' : 'warn');\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","export class BanterModel {\n    chance: number;\n    delay: number;\n    delayVariance: number;\n    messages: Array<string>;\n}\n","import { BanterModel } from './banter-model';\nimport { PlayerModel } from './player-model';\n\nexport class CPUModel extends PlayerModel {\n    // A set of weights for each possible target, adding up to 100%.\n    targetPreference: Array<number> = [50, 50];\n\n    throwDelay: number = 500;\n    throwDelayVariance: number = 200;\n\n    catchDelay: number = 500;\n    catchDelayVariance: number = 200;\n\n    introductionBanter?: BanterModel;\n    throwBanter?: BanterModel\n    catchBanter?: BanterModel\n    leftOutBanter?: BanterModel\n\n    boredomBanterThreshold?: number;\n    boredomBanter?: BanterModel;\n\n    constructor(init?: Partial<CPUModel>) {\n        super();\n\n        Object.assign(this, init);\n    }\n}\n","export class PlayerModel {\n    name: string;\n}\n","import { PlayerModel } from './player-model';\nimport { CPUModel } from './cpu-model';\n\nexport class SettingsModel {\n    player: PlayerModel;\n    computerPlayers: Array<CPUModel>;\n\n    // Gameplay\n    throwCount: number = 10;\n    ballSpeed: number = 500;\n\n    // TODO: schedule\n    // TODO: delay\n\n    // Graphics\n    baseUrl: string = './assets';\n    ballSprite: string = 'ball.png';\n\n    // Misc\n    chatEnabled: boolean = false;\n\n    constructor(init?: Partial<SettingsModel>) {\n        Object.assign(this, init);\n    }\n}\n\nexport const defaultSettings = new SettingsModel({\n    player: {\n       name: 'Player 1'\n    },\n    computerPlayers: [\n        new CPUModel({\n            name: 'Player 2'\n        }),\n        new CPUModel({\n            name: 'Player 3'\n        })\n    ]\n});\n","import { CyberballScene } from './../scenes/cyberball';\nimport { defaultSettings } from './../models/settings-model';\nimport Phaser from 'phaser';\n\nconst gameWidth = 800;\nconst gameHeight = 440;\n\n//     // TODO: Use events to talk to Qualtrics?\n//     //setTimeout(() => { window.dispatchEvent(new CustomEvent('complete', { detail: { test: 'test' } }))}, 1000)\n\n\nexport class GameViewModel {\n    gameConfig: Phaser.Types.Core.GameConfig = {\n        type: Phaser.AUTO,\n        width: gameWidth,\n        height: gameHeight,\n        scene: new CyberballScene(defaultSettings),\n        physics: {\n            default: 'arcade',\n            arcade: {\n                debug: true\n            }\n        }\n    }\n}\n","<template>\n    <h1>Cyberball</h1>\n\n    <phaser-game config.bind=\"gameConfig\"></phaser-game>\n</template>\n","export class HomeViewModel {\n\n}\n","<template>\n    <h1>Welcome to Cyberball</h1>\n</template>\n","import { FrameworkConfiguration, PLATFORM } from 'aurelia-framework';\n\nexport function configure(config: FrameworkConfiguration) {\n    config.globalResources(PLATFORM.moduleName('./phaser-game/phaser-game'));\n}\n","import { customElement, bindable, autoinject, inlineView } from \"aurelia-framework\";\nimport Phaser from 'phaser';\n\n@customElement('phaser-game')\n@autoinject()\n@inlineView('<template></template>')\nexport class PhaserGameCustomElement {\n    @bindable config: Phaser.Types.Core.GameConfig;\n    @bindable game: Phaser.Game;\n\n    constructor(protected element: Element) {\n\n    }\n\n    bind() {\n        this.config.parent = this.element as HTMLElement;\n        this.game = new Phaser.Game(this.config);\n    }\n}\n","import { SettingsModel } from './../models/settings-model';\nimport Phaser from 'phaser';\nimport { CPUModel } from 'models/cpu-model';\n\n// TODO: Figure out how to configure different positions for 4 players and portraits modes.\nconst playerPosition = new Phaser.Geom.Point(400, 250);\nconst cpuPositions = [\n    new Phaser.Geom.Point(150, 100),\n    new Phaser.Geom.Point(650, 100)\n];\n\nexport class CyberballScene extends Phaser.Scene {\n    private settings: SettingsModel;\n\n    // Game Objects:\n\n    private ballSprite: Phaser.GameObjects.Sprite;\n    private playerSprite: Phaser.GameObjects.Sprite;\n    private playerGroup: Phaser.Physics.Arcade.Group;\n\n    // Gameplay Mechanics:\n\n    private playerHasBall: boolean = true;\n    private ballHeld: boolean = true;\n    private throwTarget: Phaser.GameObjects.Sprite;\n\n    constructor(settings: SettingsModel) {\n        super({});\n\n        this.settings = settings;\n    }\n\n    public preload() {\n        // TODO: Load from settings.\n        this.load.image('ball', `${this.settings.baseUrl}/${this.settings.ballSprite}`);\n        this.load.multiatlas('player', `./assets/player.json`, 'assets');\n    }\n\n    public create() {\n        this.cameras.main.setBackgroundColor('#ffffff');\n\n        // Animations:\n\n        this.anims.create({\n            key: 'active',\n            frames: this.anims.generateFrameNames('player', { start: 1, end: 1, prefix: 'active/', suffix: '.png' })\n        });\n\n        this.anims.create({\n            key: 'idle',\n            frames: this.anims.generateFrameNames('player', { start: 1, end: 1, prefix: 'idle/', suffix: '.png' })\n        });\n\n        this.anims.create({\n            key: 'throw',\n            frameRate: 12,\n            frames: this.anims.generateFrameNames('player', { start: 1, end: 3, prefix: 'throw/', suffix: '.png' })\n        });\n\n        this.anims.create({\n            key: 'catch',\n            frames: this.anims.generateFrameNames('player', { start: 1, end: 1, prefix: 'catch/', suffix: '.png' })\n        });\n\n        // Player:\n\n        this.playerGroup = this.physics.add.group({ immovable: true, allowGravity: false });\n        this.playerSprite = this.playerGroup.create(playerPosition.x, playerPosition.y, 'player', 'active/1.png');\n\n        // CPU:\n\n        for (let i = 0; i < this.settings.computerPlayers.length; i++) {\n            let cpuSprite: Phaser.GameObjects.Sprite = this.playerGroup.create(cpuPositions[i].x, cpuPositions[i].y, 'player', 'idle/1.png');\n\n            cpuSprite.flipX = cpuPositions[i].x > playerPosition.x;\n            cpuSprite.setData('settings', this.settings.computerPlayers[i]);\n\n            cpuSprite.setInteractive();\n            cpuSprite.on('pointerdown', (e) => {\n                if (this.playerHasBall)\n                    this.throwBall(this.playerSprite, cpuSprite);\n            });\n        }\n\n        // Ball:\n\n        let ballPosition = this.getActiveBallPosition(this.playerSprite);\n        this.ballSprite = this.physics.add.sprite(ballPosition.x, ballPosition.y, 'ball');\n\n        this.physics.add.overlap(this.ballSprite, this.playerGroup, (_b, receiver) => {\n            if (!this.ballHeld && receiver === this.throwTarget)\n                this.catchBall(receiver as Phaser.GameObjects.Sprite);\n        });\n    }\n\n    public update() {\n        if (this.playerHasBall) {\n            this.playerSprite.play('active');\n            this.playerSprite.flipX = this.input.x < this.playerSprite.x;\n\n            let ballPosition = this.getActiveBallPosition(this.playerSprite);\n            this.ballSprite.x = ballPosition.x;\n            this.ballSprite.y = ballPosition.y;\n        }\n    }\n\n    // Mechanics:\n\n    public throwBall(thrower: Phaser.GameObjects.Sprite, receiver: Phaser.GameObjects.Sprite) {\n        this.playerHasBall = this.ballHeld = false;\n        this.throwTarget = receiver;\n\n        thrower.play('throw');\n        thrower.anims.currentAnim.once('complete', () => thrower.play('idle'));\n\n        let ballTargetPosition = this.getCaughtBallPosition(receiver);\n        this.physics.moveTo(this.ballSprite, ballTargetPosition.x, ballTargetPosition.y, 500);\n    }\n\n    public catchBall(receiver: Phaser.GameObjects.Sprite) {\n        this.ballHeld = true;\n\n        receiver.play('catch');\n\n        let ballPosition = this.getCaughtBallPosition(receiver);\n        (this.ballSprite.body as Phaser.Physics.Arcade.Body).reset(ballPosition.x, ballPosition.y);\n\n        if (receiver === this.playerSprite) {\n            this.playerHasBall = true;\n        } else {\n            let settings = receiver.getData('settings') as CPUModel;\n\n            setTimeout(() => {\n                receiver.play('active');\n\n                ballPosition = this.getActiveBallPosition(receiver);\n                this.ballSprite.x = ballPosition.x;\n                this.ballSprite.y = ballPosition.y;\n\n                setTimeout(() => {\n                    let random = Math.random() * 100;\n\n                    // A psuedo-random target is selected by subtracting the target preference chance from the random number until 0 is reached\n                    for (var i = 0; i < settings.targetPreference.length; i++) {\n                        random -= settings.targetPreference[i];\n\n                        if (random <= 0) {\n                            // Exclude self\n                            if(i >= this.playerGroup.getChildren().indexOf(receiver))\n                                i++\n\n                            this.throwBall(receiver, this.playerGroup.getChildren()[i] as Phaser.GameObjects.Sprite);\n\n                            break;\n                        }\n                    }\n                }, this.calculateTimeout(settings.throwDelay, settings.throwDelayVariance));\n            }, this.calculateTimeout(settings.catchDelay, settings.catchDelayVariance))\n        }\n    }\n\n    // Helpers:\n\n    public getCaughtBallPosition(target: Phaser.GameObjects.Sprite) {\n        return new Phaser.Geom.Point(target.x + (target.flipX ? -50 : 50), target.y - 15);\n    }\n\n    public getActiveBallPosition(target: Phaser.GameObjects.Sprite) {\n        return new Phaser.Geom.Point(target.x + (target.flipX ? 40 : -40), target.y - 20);\n    }\n\n    public calculateTimeout(delay: number, variance: number) {\n        return delay + Math.random() * variance;\n    }\n}\n"]}